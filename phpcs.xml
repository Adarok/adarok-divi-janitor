<?xml version="1.0"?>
<ruleset name="Adarok Divi Janitor">
    <description>PHP_CodeSniffer configuration for Adarok Divi Janitor</description>

    <!-- What to scan -->
    <file>.</file>

    <!-- Exclude paths -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>
    <exclude-pattern>*.css</exclude-pattern>
    <exclude-pattern>phpstan-bootstrap.php</exclude-pattern>
    <exclude-pattern>index.php</exclude-pattern>

    <!-- Show progress and sniff codes -->
    <arg value="ps"/>
    <arg name="colors"/>
    <arg name="extensions" value="php"/>
    <arg name="parallel" value="8"/>

    <!-- Rules -->
    <rule ref="WordPress">
        <!-- Allow short array syntax -->
        <exclude name="Generic.Arrays.DisallowShortArraySyntax"/>

        <!-- We use camelCase for some method names to match WordPress conventions -->
        <exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid"/>

        <!-- Allow usage of filesystem functions (we validate user capabilities) -->
        <exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_fwrite"/>
        <exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_fclose"/>

        <!-- Our file naming convention is consistent and clear -->
        <exclude name="WordPress.Files.FileName"/>

        <!-- Allow translator comments to be on same line as translation function -->
        <exclude name="WordPress.WP.I18n.MissingTranslatorsComment"/>

        <!-- Allow non-Yoda conditions for better readability -->
        <exclude name="WordPress.PHP.YodaConditions.NotYoda"/>

        <!-- Allow mixed OO and procedural code in main file (standard WordPress plugin architecture) -->
        <exclude name="Universal.Files.SeparateFunctionsFromOO.Mixed"/>
    </rule>

    <!-- Enforce WordPress coding standards -->
    <rule ref="WordPress-Core"/>
    <rule ref="WordPress-Docs"/>
    <rule ref="WordPress-Extra"/>

    <!-- Check for PHP cross-version compatibility -->
    <config name="testVersion" value="8.1-"/>
    <rule ref="PHPCompatibilityWP"/>

    <!-- Minimum WordPress version -->
    <config name="minimum_supported_wp_version" value="6.0"/>

    <!-- Text domain check -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array">
                <element value="adarok-divi-janitor"/>
            </property>
        </properties>
    </rule>

    <!-- Verify that everything in the global namespace is prefixed -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <properties>
            <property name="prefixes" type="array">
                <element value="adarok"/>
                <element value="Adarok"/>
                <element value="ADAROK"/>
            </property>
        </properties>
    </rule>

    <!-- Security checks -->
    <rule ref="WordPress.Security"/>

    <!-- Nonce verification -->
    <rule ref="WordPress.Security.NonceVerification"/>

    <!-- Escaping output -->
    <rule ref="WordPress.Security.EscapeOutput"/>

    <!-- Validating data -->
    <rule ref="WordPress.Security.ValidatedSanitizedInput"/>

    <!-- Database queries -->
    <rule ref="WordPress.DB.DirectDatabaseQuery">
        <type>warning</type>
    </rule>
    <rule ref="WordPress.DB.PreparedSQL"/>
</ruleset>
